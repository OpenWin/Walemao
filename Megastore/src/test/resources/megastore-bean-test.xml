<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:c="http://www.springframework.org/schema/c"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">


	<!-- 项目配置文件 -->
	<context:property-placeholder location="/megastore-app-test.properties" />

	<context:component-scan base-package="com.walemao.megastore" />

	<!-- 配置Mysql数据源 -->
	<bean id="dataSourceSpied" class="com.jolbox.bonecp.BoneCPDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxConnectionsPerPartition" value="${jdbc.maxConnectionsPerPartition}" />
		<property name="minConnectionsPerPartition" value="${jdbc.minConnectionsPerPartition}" />
		<property name="partitionCount" value="${jdbc.partitionCount}" />
		<property name="acquireIncrement" value="5" />
		<property name="statementsCacheSize" value="100" />
		<property name="releaseHelperThreads" value="3" />
		<property name="connectionTimeoutInMs" value="5000" />
		<property name="closeConnectionWatchTimeoutInMs" value="1000" />
	</bean>

	<!-- log4jdbc代理数据源 -->
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="dataSourceSpied" />
	</bean>

	<!-- MySql JDBC Template -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 初始化数据库数据 -->
	<jdbc:initialize-database data-source="dataSource"
		enabled="false" ignore-failures="ALL">
		<jdbc:script encoding="UTF-8"
			location="/com/walemao/megastore/sql/megastore_schema_test.sql" />
	</jdbc:initialize-database>

	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- email -->
	<bean id = "mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.126.com"></property>
		<property name="port" value="25"></property>
		<property name="username" value="walemao@126.com"></property>
		<property name="password" value="walemao1"></property>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>
	
	<!-- 盐 -->
	<bean id="saltSource"
		class="org.springframework.security.authentication.dao.ReflectionSaltSource">
		<property name="userPropertyToUse" value = "salt"></property>
	</bean>
	
	<!-- md5加密方式 -->
	<bean id="md5" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder">
	</bean>
	
	<bean id = "userDetailsService" class="com.walemao.megastore.repository.impl.UsernameJdbcDaoImpl">
		<property name="dataSource" ref="dataSource"/>
		<property name="usersByUsernameQuery" 
			value = "select u_username as username, u_password as password, u_enabled as enabled, u_salt as salt from t_user where u_username = ?"/>
		<property name="authoritiesByUsernameQuery" value="select username, authority from t_user_authority where username = ?"/>
	</bean>
	
	<bean id = "usernameAuthenticatonProvider" class="com.walemao.megastore.domain.rel.UsernameAuthenticatonProvider">
		<property name="userDetailsService" ref="userDetailsService"></property>
		<property name="passwordEncoder" ref="md5"></property>
		<property name="saltSource" ref="saltSource"></property>
	</bean>
	
	<!-- ======================== AUTHENTICATION ======================= -->
	<bean  id="org.springframework.security.authenticationManager"  class="org.springframework.security.authentication.ProviderManager">
		<property name="providers">
			<list>
				<ref local="usernameAuthenticatonProvider"/>
			</list>
		</property>
	</bean>

</beans>